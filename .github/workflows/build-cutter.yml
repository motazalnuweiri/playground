name: Build Cutter (Qt5)

on:
  workflow_dispatch:
  release:
    types: [created]

jobs:
  build-ubuntu:
    runs-on: ubuntu-24.04-arm

    steps:
      - name: Clone Cutter Repository (Stable Branch)
        run: |
          git clone --recursive --branch stable https://github.com/rizinorg/cutter.git src

      - name: Install dependencies (Qt5)
        run: |
          sudo apt-get update
          sudo apt install build-essential cmake meson pkgconf libzip-dev zlib1g-dev \
             qt5-qmake qtbase5-dev qtchooser qttools5-dev qttools5-dev-tools libqt5svg5-dev \
             libqt5core5a libqt5widgets5 libqt5gui5 qttranslations5-l10n qml-module-qtquick2 \
             qml-module-qtquick-controls qml-module-qtquick-controls2 qtdeclarative5-dev lsb-release -y
          sudo apt-get install python3 python3-dev libpyside2-dev libshiboken2-dev -y
          sudo apt install libgraphviz-dev -y
          sudo apt install libkf5syntaxhighlighting-dev -y
          

      - name: Build Cutter
        working-directory: src
        run: |
          cmake -B build -DCMAKE_BUILD_TYPE=Release \
            -DCUTTER_QT=5 \
            -DCUTTER_USE_BUNDLED_RIZIN=ON \
            -DCUTTER_USE_ADDITIONAL_RIZIN_PATHS=OFF \
            -DCUTTER_PACKAGE_DEPENDENCIES=ON \
            -DCUTTER_ENABLE_KSYNTAXHIGHLIGHTING=ON \
            -DCUTTER_ENABLE_GRAPHVIZ=ON \
            -DCUTTER_ENABLE_PYTHON=ON \
            -DCUTTER_ENABLE_PYTHON_BINDINGS=ON \
            -DCUTTER_ENABLE_DEPENDENCY_DOWNLOADS=ON \
            -DCUTTER_ENABLE_PACKAGING=ON \
            -DCUTTER_PACKAGE_RZ_GHIDRA=ON \
            -DCUTTER_PACKAGE_RZ_LIBSWIFT=ON \
            -DCUTTER_PACKAGE_RZ_LIBYARA=ON \
            -DCUTTER_PACKAGE_RZ_SILHOUETTE=ON \
            -DCUTTER_PACKAGE_JSDEC=ON \
            -DCPACK_BINARY_DEB=ON \
            -DCPACK_BINARY_STGZ=OFF \
            -DCPACK_SOURCE_TBZ2=OFF \
            -DCPACK_SOURCE_TXZ=OFF
          cmake --build build

      - name: Build packages
        working-directory: src/build
        run: |
          export PATH=/home/runner/work/playground/playground/src/build/Rizin-prefix/lib:$PATH
          export PATH=/usr/local/bin:$PATH
          cmake --build . --target package

      - name: Zip the Build Folder
        working-directory: src
        run: |
          zip -9 -r cutter-build.zip build -x \
             "build/_CPack_Packages/*" \
             "build/Rizin-Bundled-prefix/*" \
             "build/src/*" \
             "build/CMakeFiles/*" \
             "build/dist/*"

      - name: Upload build Zip as Artifact
        if: github.event_name != 'release'
        uses: actions/upload-artifact@v4
        with:
          name: cutter-build
          path: src/cutter-build.zip
