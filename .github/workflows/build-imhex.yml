name: Build ImHex

env:
  BUILD_TYPE: RelWithDebInfo
  
on:
  workflow_dispatch:
  release:
    types: [created]
  
jobs:

  # Ubuntu build
  ubuntu:
    strategy:
      fail-fast: false
      matrix:
        include:
          - release_num: "24.04"
          - release_num: "24.10"

    name: üêß Ubuntu ${{ matrix.release_num }}
    runs-on: ubuntu-24.04-arm

    container:
      image: "ubuntu:${{ matrix.release_num }}"
      options: --privileged

    permissions:
      id-token: write
      attestations: write

    steps:
      - name: ‚¨áÔ∏è Install setup dependencies
        run: apt update && apt install -y git curl

      - name: üß∞ Checkout
        run: |
          git clone --recursive --branch master https://github.com/WerWolv/ImHex.git .

      - name: üìú Setup ccache
        uses: hendrikmuhs/ccache-action@v1
        with:
          key: Ubuntu-${{ matrix.release_num }}-ccache-${{ github.run_id }}
          restore-keys: Ubuntu-${{ matrix.release_num }}-ccache
          max-size: 1G

      - name: ‚¨áÔ∏è Install dependencies
        run: |
          apt update
          bash dist/get_deps_debian.sh

      - name: ‚¨áÔ∏è Install .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.100'

      # Ubuntu cmake build
      - name: üõ†Ô∏è Configure CMake
        shell: bash
        run: |
          set -x
          git config --global --add safe.directory '*'
          mkdir -p build
          cd build
          CC=gcc-14 CXX=g++-14 cmake -G "Ninja"                       \
            -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }}                  \
            -DCMAKE_INSTALL_PREFIX="/usr"                             \
            -DCMAKE_C_COMPILER_LAUNCHER=ccache                        \
            -DCMAKE_CXX_COMPILER_LAUNCHER=ccache                      \
            -DIMHEX_PATTERNS_PULL_MASTER=ON                           \
            -DIMHEX_COMMIT_HASH_LONG="${GITHUB_SHA}"                  \
            -DIMHEX_COMMIT_BRANCH="${GITHUB_REF##*/}"                 \
            -DIMHEX_ENABLE_LTO=ON                                     \
            -DIMHEX_USE_GTK_FILE_PICKER=ON                            \
            -DDOTNET_EXECUTABLE="dotnet"                              \
            ..

      - name: üõ†Ô∏è Build
        run: cd build && DESTDIR=DebDir ninja install

      - name: üìú Set version variable
        run: |
          echo "IMHEX_VERSION=`cat VERSION`" >> $GITHUB_ENV

      - name: üì¶ Bundle DEB
        run: |
          sed -i 's/Architecture:[[:space:]]*amd64/Architecture: arm64/' control.in
          cp -r build/DEBIAN build/DebDir
          dpkg-deb -Zzstd --build build/DebDir
          mv build/DebDir.deb imhex-${{ env.IMHEX_VERSION }}-Ubuntu-${{ matrix.release_num }}-arm64.deb

      - name: ‚¨ÜÔ∏è Upload DEB
        uses: actions/upload-artifact@v4
        with:
          if-no-files-found: error
          name: Ubuntu ${{ matrix.release_num }} DEB arm64
          path: '*.deb'
